{
  FILE  : fastexponent.flr
  AUTHOR: Grant Siebring
  DATE  : 2016/11/10
  TASK  : finds the exponential value of an integer using repeated halving.
}

program fastexponent (base: integer, exp: integer): integer ;
	

   function mod(m : integer, n : integer) : integer
   begin
	  return if m < n then m
					  else mod(m-n, n)
   end;

begin
	if exp = 0 then
		return 1
	else if base mod 2 = 0 then
		return (fastexponent(base, (exp / 2)) * fastexponent(base, (exp / 2)))
	else
		return (fastexponent(base, (exp / 2)) * fastexponent(base, ((exp / 2)) + 1)
end.